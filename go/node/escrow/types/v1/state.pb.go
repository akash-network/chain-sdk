// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: akash/escrow/types/v1/state.proto

package v1

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// State stores state for an escrow account.
type State int32

const (
	// AccountStateInvalid is an invalid state.
	StateInvalid State = 0
	// StateOpen is the state when an object is open.
	StateOpen State = 1
	// StateClosed is the state when an object is closed.
	StateClosed State = 2
	// StateOverdrawn is the state when an object are overdrawn.
	StateOverdrawn State = 3
)

var State_name = map[int32]string{
	0: "invalid",
	1: "open",
	2: "closed",
	3: "overdrawn",
}

var State_value = map[string]int32{
	"invalid":   0,
	"open":      1,
	"closed":    2,
	"overdrawn": 3,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}

func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9e67b3342ba3747f, []int{0}
}

func init() {
	proto.RegisterEnum("akash.escrow.types.v1.State", State_name, State_value)
}

func init() { proto.RegisterFile("akash/escrow/types/v1/state.proto", fileDescriptor_9e67b3342ba3747f) }

var fileDescriptor_9e67b3342ba3747f = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4c, 0xcc, 0x4e, 0x2c,
	0xce, 0xd0, 0x4f, 0x2d, 0x4e, 0x2e, 0xca, 0x2f, 0xd7, 0x2f, 0xa9, 0x2c, 0x48, 0x2d, 0xd6, 0x2f,
	0x33, 0xd4, 0x2f, 0x2e, 0x49, 0x2c, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x05,
	0x2b, 0xd1, 0x83, 0x28, 0xd1, 0x03, 0x2b, 0xd1, 0x2b, 0x33, 0x94, 0x12, 0x49, 0xcf, 0x4f, 0xcf,
	0x07, 0xab, 0xd0, 0x07, 0xb1, 0x20, 0x8a, 0xb5, 0x5a, 0x19, 0xb9, 0x58, 0x83, 0x41, 0x9a, 0x85,
	0x64, 0xb9, 0xd8, 0x33, 0xf3, 0xca, 0x12, 0x73, 0x32, 0x53, 0x04, 0x18, 0xa4, 0x04, 0xba, 0xe6,
	0x2a, 0xf0, 0x80, 0xc5, 0x3d, 0x21, 0x62, 0x42, 0xe2, 0x5c, 0x2c, 0xf9, 0x05, 0xa9, 0x79, 0x02,
	0x8c, 0x52, 0xbc, 0x5d, 0x73, 0x15, 0x38, 0xc1, 0x72, 0xfe, 0x05, 0xa9, 0x79, 0x42, 0xd2, 0x5c,
	0x6c, 0xc9, 0x39, 0xf9, 0xc5, 0xa9, 0x29, 0x02, 0x4c, 0x52, 0xfc, 0x5d, 0x73, 0x15, 0xb8, 0xc1,
	0x52, 0xce, 0x60, 0x21, 0x21, 0x45, 0x2e, 0xce, 0xfc, 0xb2, 0xd4, 0xa2, 0x94, 0xa2, 0xc4, 0xf2,
	0x3c, 0x01, 0x66, 0x29, 0xa1, 0xae, 0xb9, 0x0a, 0x7c, 0x10, 0xad, 0x30, 0x51, 0x29, 0x96, 0x8e,
	0xc5, 0x72, 0x0c, 0x4e, 0xb6, 0x27, 0x1e, 0xc9, 0x31, 0x5e, 0x78, 0x24, 0xc7, 0xf8, 0xe0, 0x91,
	0x1c, 0xe3, 0x84, 0xc7, 0x72, 0x0c, 0x17, 0x1e, 0xcb, 0x31, 0xdc, 0x78, 0x2c, 0xc7, 0x10, 0xa5,
	0x5c, 0x90, 0x9d, 0xae, 0x97, 0x98, 0x5d, 0xa2, 0x97, 0x92, 0x5a, 0xa6, 0x9f, 0x9e, 0xaf, 0x9f,
	0x97, 0x9f, 0x92, 0x8a, 0xee, 0xff, 0x24, 0x36, 0xb0, 0x6f, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xd5, 0x7e, 0x1c, 0x49, 0x1f, 0x01, 0x00, 0x00,
}
