syntax = "proto3";
package akash.escrow.types.v1;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

import "akash/base/deposit/v1/deposit.proto";

option go_package = "pkg.akt.dev/go/node/escrow/types/v1";

// Depositor stores state of a deposit.
message Depositor {
  // Owner is the bech32 address of the depositor.
  // It is a string representing a valid account address.
  //
  // Example:
  //   "akash1..."
  // If depositor is same as the owner, then any incoming coins are added to the Balance.
  // If depositor isn't same as the owner, then any incoming coins are added to the Funds.
  string owner = 1 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag)   = "owner",
    (gogoproto.moretags)  = "yaml:\"owner\""
  ];

  // Height blockchain height at which deposit was created
  int64 height = 2 [
    (gogoproto.jsontag)    = "height",
    (gogoproto.moretags)   = "yaml:\"height\""
  ];

  // Source indicated origination of the funds
  akash.base.deposit.v1.Source source = 3 [
    (gogoproto.jsontag)      = "source",
    (gogoproto.moretags)     = "yaml:\"source\""
  ];

  // Balance amount of funds available to spend in this deposit.
  cosmos.base.v1beta1.DecCoin balance = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag)  = "balance",
    (gogoproto.moretags) = "yaml:\"balance\""
  ];
}
