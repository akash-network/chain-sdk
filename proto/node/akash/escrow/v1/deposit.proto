syntax = "proto3";
package akash.escrow.v1;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "pkg.akt.dev/go/node/escrow/v1";

// Deposit stores state of a deposit.
message Deposit {
  // Depositor is the bech32 address of the depositor.
  // It is a string representing a valid account address.
  //
  // Example:
  //   "akash1..."
  // If depositor is same as the owner, then any incoming coins are added to the Balance.
  // If depositor isn't same as the owner, then any incoming coins are added to the Funds.
  string depositor = 1 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag)   = "depositor",
    (gogoproto.moretags)  = "yaml:\"depositor\""
  ];

  // Height blockchain height at which deposit was created
  int64 height = 2 [
    (gogoproto.jsontag)    = "height",
    (gogoproto.moretags)   = "yaml:\"height\""
  ];

  // Balance amount of funds available to spend in this deposit.
  cosmos.base.v1beta1.Coin amount = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag)  = "amount",
    (gogoproto.moretags) = "yaml:\"amount\""
  ];

  // Balance amount of funds available to spend in this deposit.
  cosmos.base.v1beta1.DecCoin balance = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag)  = "balance",
    (gogoproto.moretags) = "yaml:\"balance\""
  ];
}
