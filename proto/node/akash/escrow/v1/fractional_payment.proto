syntax = "proto3";
package akash.escrow.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

import "cosmos/base/v1beta1/coin.proto";

import "akash/escrow/v1/accountid.proto";
import "akash/escrow/v1/state.proto";

option go_package = "pkg.akt.dev/go/node/escrow/v1";

// FractionalPayment stores state for a payment.
message FractionalPayment {
  // AccountId is the unique identifier for the account.
  AccountID account_id = 1 [
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "accountID",
    (gogoproto.moretags)   = "yaml:\"accountID\"",
    (gogoproto.customname) = "AccountID"
  ];

  // PaymentId is the unique identifier for the payment.
  string payment_id = 2 [
    (gogoproto.jsontag)    = "paymentID",
    (gogoproto.moretags)   = "yaml:\"paymentID\"",
    (gogoproto.customname) = "PaymentID"
  ];

  // Owner is the bech32 address of the payment.
  // It is a string representing a valid account address.
  //
  // Example:
  //   "akash1..."
  string owner = 3 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.jsontag)    = "owner",
    (gogoproto.moretags)   = "yaml:\"owner\""
  ];

  // State represents the state of the FractionalPayment.
  State state = 4 [
    (gogoproto.jsontag)  = "state",
    (gogoproto.moretags) = "yaml:\"state\""
  ];

  // Rate holds the rate of the FractionalPayment.
  cosmos.base.v1beta1.DecCoin rate = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag)  = "rate",
    (gogoproto.moretags) = "yaml:\"rate\""
  ];

  // Balance is the current available coins.
  cosmos.base.v1beta1.DecCoin balance = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag)  = "balance",
    (gogoproto.moretags) = "yaml:\"balance\""
  ];

  // Withdrawn corresponds to the amount of coins withdrawn by the FractionalPayment.
  cosmos.base.v1beta1.Coin withdrawn = 7 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag)  = "withdrawn",
    (gogoproto.moretags) = "yaml:\"withdrawn\""
  ];
}
