// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`protoc-sdk-objec plugin generates SDK object from proto files 1`] = `
"import { createServiceLoader } from "../sdk/client/createServiceLoader.ts";
import { SDKOptions } from "../sdk/types.ts";

import type * as msg from "./protos/msg.ts";
import type * as query from "./protos/query.ts";
import { createClientFactory } from "../sdk/client/createClientFactory.ts";
import type { Transport, CallOptions, TxCallOptions } from "../sdk/transport/types.ts";
import { withMetadata } from "../sdk/client/sdkMetadata.ts";


export const serviceLoader= createServiceLoader([
  () => import("./protos/msg_akash.ts").then(m => m.Msg),
  () => import("./protos/query_akash.ts").then(m => m.Query)
] as const);
export function createSDK(queryTransport: Transport, txTransport: Transport, options?: SDKOptions) {
  const getClient = createClientFactory<CallOptions>(queryTransport, options?.clientOptions);
  const getMsgClient = createClientFactory<TxCallOptions>(txTransport, options?.clientOptions);
  return {
    akash: {
      test: {
        functional: {
          send: withMetadata(async function send(input: msg.SendRequest, options?: TxCallOptions) {
            const service = await serviceLoader.loadAt(0);
            return getMsgClient(service).send(input, options);
          }, { path: [0, 0] }),
          getBlock: withMetadata(async function getBlock(input: query.GetBlockRequest, options?: CallOptions) {
            const service = await serviceLoader.loadAt(1);
            return getClient(service).getBlock(input, options);
          }, { path: [1, 0] }),
          /**
           * getBlockByHeight is deprecated. Use GetBlock instead.
           * @deprecated
           */
          getBlockByHeight: withMetadata(async function getBlockByHeight(input: query.GetBlockByHeightRequest, options?: CallOptions) {
            const service = await serviceLoader.loadAt(1);
            return getClient(service).getBlockByHeight(input, options);
          }, { path: [1, 1] })
        }
      }
    }
  };
}
"
`;

exports[`protoc-sdk-objec plugin generates SDK object from proto files 2`] = `
"import { SendRequest, SendResponse } from "./msg.ts";

export const Msg = {
  typeName: "akash.test.functional.Msg",
  methods: {
    send: {
      name: "Send",
      input: SendRequest,
      output: SendResponse,
      get parent() { return Msg; },
    },
  },
} as const;
"
`;

exports[`protoc-sdk-objec plugin generates SDK object from proto files 3`] = `
"import { GetBlockByHeightRequest, GetBlockByHeightResponse, GetBlockRequest, GetBlockResponse } from "./query.ts";

export const Query = {
  typeName: "akash.test.functional.Query",
  methods: {
    getBlock: {
      name: "GetBlock",
      input: GetBlockRequest,
      output: GetBlockResponse,
      get parent() { return Query; },
    },
    getBlockByHeight: {
      name: "GetBlockByHeight",
      input: GetBlockByHeightRequest,
      output: GetBlockByHeightResponse,
      get parent() { return Query; },
    },
  },
} as const;
"
`;
