import { QueryGroupInfoRequest, QueryGroupInfoResponse, QueryGroupMembersRequest, QueryGroupMembersResponse, QueryGroupPoliciesByAdminRequest, QueryGroupPoliciesByAdminResponse, QueryGroupPoliciesByGroupRequest, QueryGroupPoliciesByGroupResponse, QueryGroupPolicyInfoRequest, QueryGroupPolicyInfoResponse, QueryGroupsByAdminRequest, QueryGroupsByAdminResponse, QueryGroupsByMemberRequest, QueryGroupsByMemberResponse, QueryGroupsRequest, QueryGroupsResponse, QueryProposalRequest, QueryProposalResponse, QueryProposalsByGroupPolicyRequest, QueryProposalsByGroupPolicyResponse, QueryTallyResultRequest, QueryTallyResultResponse, QueryVoteByProposalVoterRequest, QueryVoteByProposalVoterResponse, QueryVotesByProposalRequest, QueryVotesByProposalResponse, QueryVotesByVoterRequest, QueryVotesByVoterResponse } from "./query.ts";

export const Query = {
  typeName: "cosmos.group.v1.Query",
  methods: {
    groupInfo: {
      name: "GroupInfo",
      httpPath: "/cosmos/group/v1/group_info/{group_id}",
      input: QueryGroupInfoRequest,
      output: QueryGroupInfoResponse,
      get parent() { return Query; },
    },
    groupPolicyInfo: {
      name: "GroupPolicyInfo",
      httpPath: "/cosmos/group/v1/group_policy_info/{address}",
      input: QueryGroupPolicyInfoRequest,
      output: QueryGroupPolicyInfoResponse,
      get parent() { return Query; },
    },
    groupMembers: {
      name: "GroupMembers",
      httpPath: "/cosmos/group/v1/group_members/{group_id}",
      input: QueryGroupMembersRequest,
      output: QueryGroupMembersResponse,
      get parent() { return Query; },
    },
    groupsByAdmin: {
      name: "GroupsByAdmin",
      httpPath: "/cosmos/group/v1/groups_by_admin/{admin}",
      input: QueryGroupsByAdminRequest,
      output: QueryGroupsByAdminResponse,
      get parent() { return Query; },
    },
    groupPoliciesByGroup: {
      name: "GroupPoliciesByGroup",
      httpPath: "/cosmos/group/v1/group_policies_by_group/{group_id}",
      input: QueryGroupPoliciesByGroupRequest,
      output: QueryGroupPoliciesByGroupResponse,
      get parent() { return Query; },
    },
    groupPoliciesByAdmin: {
      name: "GroupPoliciesByAdmin",
      httpPath: "/cosmos/group/v1/group_policies_by_admin/{admin}",
      input: QueryGroupPoliciesByAdminRequest,
      output: QueryGroupPoliciesByAdminResponse,
      get parent() { return Query; },
    },
    proposal: {
      name: "Proposal",
      httpPath: "/cosmos/group/v1/proposal/{proposal_id}",
      input: QueryProposalRequest,
      output: QueryProposalResponse,
      get parent() { return Query; },
    },
    proposalsByGroupPolicy: {
      name: "ProposalsByGroupPolicy",
      httpPath: "/cosmos/group/v1/proposals_by_group_policy/{address}",
      input: QueryProposalsByGroupPolicyRequest,
      output: QueryProposalsByGroupPolicyResponse,
      get parent() { return Query; },
    },
    voteByProposalVoter: {
      name: "VoteByProposalVoter",
      httpPath: "/cosmos/group/v1/vote_by_proposal_voter/{proposal_id}/{voter}",
      input: QueryVoteByProposalVoterRequest,
      output: QueryVoteByProposalVoterResponse,
      get parent() { return Query; },
    },
    votesByProposal: {
      name: "VotesByProposal",
      httpPath: "/cosmos/group/v1/votes_by_proposal/{proposal_id}",
      input: QueryVotesByProposalRequest,
      output: QueryVotesByProposalResponse,
      get parent() { return Query; },
    },
    votesByVoter: {
      name: "VotesByVoter",
      httpPath: "/cosmos/group/v1/votes_by_voter/{voter}",
      input: QueryVotesByVoterRequest,
      output: QueryVotesByVoterResponse,
      get parent() { return Query; },
    },
    groupsByMember: {
      name: "GroupsByMember",
      httpPath: "/cosmos/group/v1/groups_by_member/{address}",
      input: QueryGroupsByMemberRequest,
      output: QueryGroupsByMemberResponse,
      get parent() { return Query; },
    },
    tallyResult: {
      name: "TallyResult",
      httpPath: "/cosmos/group/v1/proposals/{proposal_id}/tally",
      input: QueryTallyResultRequest,
      output: QueryTallyResultResponse,
      get parent() { return Query; },
    },
    groups: {
      name: "Groups",
      httpPath: "/cosmos/group/v1/groups",
      input: QueryGroupsRequest,
      output: QueryGroupsResponse,
      get parent() { return Query; },
    },
  },
} as const;
